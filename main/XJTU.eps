%!PS-Adobe-3.0 EPSF-3.0
%%Title: (XJTU.sdr)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 00:34:52 04/20/05
%%For: (GB@PCFRESHER)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 24 54 415 160
%%HiResBoundingBox: 24.06 54.471 414.9 159.591
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3416 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2005-04-20T00:34:52+08:00</xap:CreateDate>
         <xap:ModifyDate>2005-04-20T00:34:52+08:00</xap:ModifyDate>
         <xap:MetadataDate>2005-04-20T00:34:52+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:426EA1E7F0B0D91194258A653C87CC25</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:426EA1E7F0B0D91194258A653C87CC25</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>GB@PCFRESHER</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">XJTU.sdr</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
24.06 54.471 390.84 105.12 rectclip
q
24.06 54.471 m
414.9 54.471 l
414.9 159.591 l
24.06 159.591 l
h
W
n
n
58.74 135.771 m
54.54 134.031 l
50.52 132.351 l
46.56 130.851 l
43.56 129.591 l
41.94 128.871 l
40.62 128.331 l
39.72 128.091 l
38.46 127.731 l
37.44 127.731 l
36.3 127.731 l
35.46 127.731 l
34.98 127.551 l
34.86 126.951 l
35.04 125.931 l
35.64 124.731 l
36.06 123.651 l
36.72 122.571 l
37.44 121.731 l
38.28 121.011 l
39.12 120.771 l
39.78 120.771 l
40.5 120.891 l
41.82 121.551 l
43.32 122.091 l
44.94 122.871 l
46.32 123.471 l
50.52 125.631 l
51.9 126.351 l
53.58 127.071 l
55.44 128.211 l
57.18 129.171 l
58.5 130.071 l
58.92 130.311 l
59.28 130.191 l
59.28 129.831 l
58.92 129.171 l
58.26 128.211 l
57.24 127.071 l
56.4 125.991 l
55.74 125.271 l
55.26 124.491 l
55.26 124.191 l
55.5 123.951 l
56.1 124.011 l
56.94 124.731 l
57.96 125.331 l
59.58 126.411 l
61.02 127.791 l
62.34 128.691 l
63.6 129.171 l
64.44 129.411 l
65.28 129.711 l
66.3 130.311 l
68.04 131.451 l
70.08 132.711 l
72.06 133.791 l
73.74 134.691 l
75.36 135.411 l
76.8 136.131 l
78.12 136.851 l
79.32 137.751 l
80.16 138.771 l
80.52 140.031 l
80.52 141.291 l
80.22 141.951 l
79.32 142.911 l
78.0 143.271 l
77.22 143.511 l
76.32 143.811 l
75.36 144.111 l
74.52 144.471 l
73.8 144.711 l
73.08 144.411 l
72.42 143.871 l
71.7 143.271 l
69.72 141.771 l
67.62 140.391 l
65.46 139.131 l
62.82 137.811 l
58.74 135.771 l
h
29.34 89.511 m
28.5 91.671 l
28.02 93.411 l
27.84 94.791 l
27.6 95.991 l
27.24 96.831 l
26.82 97.011 l
26.28 96.771 l
25.86 96.171 l
25.74 95.631 l
25.74 94.611 l
25.74 93.351 l
25.5 92.391 l
25.26 91.251 l
24.84 89.811 l
24.54 88.671 l
24.36 87.651 l
24.12 86.751 l
24.06 85.191 l
24.06 83.871 l
24.12 81.771 l
24.36 80.511 l
24.78 78.951 l
25.32 77.631 l
25.92 76.671 l
26.7 75.951 l
27.42 75.291 l
28.08 74.931 l
28.98 74.751 l
29.76 74.631 l
30.6 74.931 l
31.44 75.471 l
32.22 76.131 l
32.76 77.331 l
32.94 78.951 l
32.94 80.211 l
32.88 81.771 l
32.76 82.911 l
32.28 83.991 l
31.56 85.611 l
30.66 86.991 l
30.0 88.431 l
29.34 89.511 l
h
47.82 121.371 m
48.54 120.711 l
49.44 119.691 l
50.1 118.431 l
50.28 116.991 l
50.4 115.131 l
50.28 112.731 l
50.1 109.551 l
49.56 105.351 l
47.7 100.671 l
46.68 98.751 l
45.48 96.171 l
43.14 90.411 l
42.24 88.491 l
41.88 87.051 l
41.52 86.271 l
40.92 85.011 l
40.74 84.231 l
40.56 83.271 l
40.56 82.131 l
40.74 81.231 l
41.28 80.451 l
41.94 79.791 l
42.84 79.431 l
43.68 79.371 l
44.64 79.611 l
46.14 80.151 l
47.16 80.751 l
48.42 81.111 l
49.2 81.171 l
49.8 81.051 l
50.16 80.511 l
49.98 79.971 l
49.26 79.071 l
48.06 78.111 l
47.1 77.391 l
47.1 76.911 l
47.7 76.791 l
48.42 76.851 l
49.62 77.391 l
50.76 78.051 l
52.62 78.771 l
53.88 79.731 l
55.02 80.691 l
56.1 81.531 l
56.58 82.251 l
56.76 83.451 l
56.58 84.651 l
56.1 85.251 l
54.96 85.671 l
53.76 86.031 l
52.68 86.031 l
50.88 85.971 l
49.44 85.971 l
47.16 86.031 l
46.14 86.331 l
45.96 86.691 l
46.08 87.171 l
46.5 88.011 l
47.4 88.791 l
47.82 89.871 l
48.54 91.671 l
51.3 98.151 l
52.92 101.271 l
54.0 102.951 l
54.78 104.331 l
55.38 105.591 l
55.8 106.851 l
57.06 110.391 l
57.06 113.091 l
57.12 114.171 l
57.36 115.551 l
57.72 116.871 l
57.84 118.071 l
57.84 119.631 l
57.36 120.891 l
56.22 122.151 l
54.96 122.991 l
53.64 123.891 l
52.32 124.371 l
51.06 124.851 l
48.96 125.271 l
47.1 124.851 l
45.66 123.831 l
45.96 122.991 l
46.68 122.511 l
46.98 122.031 l
47.82 121.371 l
h
37.98 106.131 m
37.92 105.231 l
37.98 104.211 l
37.86 102.831 l
37.86 102.051 l
37.92 100.851 l
37.98 99.471 l
38.1 96.771 l
38.7 95.691 l
38.94 95.331 l
39.0 94.611 l
39.0 93.351 l
39.18 92.571 l
39.78 91.971 l
40.62 91.551 l
41.88 91.251 l
43.14 91.551 l
44.04 91.671 l
45.36 93.351 l
45.72 94.731 l
45.0 95.631 l
44.88 96.351 l
44.64 97.371 l
44.64 98.571 l
44.64 99.831 l
46.32 101.751 l
47.28 101.571 l
47.58 100.911 l
47.82 100.131 l
48.72 98.811 l
51.0 101.091 l
51.18 105.351 l
47.28 104.451 l
45.24 104.571 l
43.8 104.691 l
43.26 105.051 l
42.72 105.771 l
42.24 106.551 l
41.76 107.691 l
41.46 108.531 l
40.56 109.671 l
39.84 110.691 l
39.18 111.531 l
38.4 111.771 l
37.86 111.651 l
37.62 110.931 l
37.62 110.331 l
37.98 109.491 l
37.98 108.351 l
37.98 107.271 l
37.98 106.131 l
h
37.98 98.571 m
50.1 107.631 l
63.12 116.391 l
64.8 117.651 l
66.24 118.131 l
67.38 118.131 l
68.04 117.771 l
69.78 116.571 l
70.86 115.311 l
72.18 113.811 l
72.84 112.671 l
72.9 111.531 l
72.78 110.391 l
71.88 109.191 l
71.04 107.691 l
70.14 105.951 l
68.88 103.311 l
62.16 90.471 l
61.26 88.911 l
60.54 87.651 l
59.58 86.811 l
58.68 86.451 l
57.24 86.331 l
55.86 86.331 l
54.96 86.691 l
53.64 88.071 l
52.38 89.571 l
51.3 91.191 l
49.86 92.931 l
48.96 94.011 l
48.96 94.371 l
49.56 94.851 l
50.4 94.671 l
51.06 94.251 l
52.38 93.351 l
53.46 92.931 l
54.06 92.931 l
54.78 93.351 l
55.38 94.671 l
57.12 97.791 l
60.84 105.531 l
62.76 109.791 l
63.3 111.111 l
63.54 112.071 l
63.36 112.551 l
63.06 112.551 l
62.22 112.191 l
60.84 111.351 l
50.88 104.331 l
41.34 97.731 l
27.42 87.471 l
26.64 90.231 l
37.98 98.571 l
h
37.98 98.571 m
50.1 107.631 l
63.12 116.391 l
64.8 117.651 l
66.24 118.131 l
67.38 118.131 l
68.04 117.771 l
69.78 116.571 l
70.86 115.311 l
72.18 113.811 l
72.84 112.671 l
72.9 111.531 l
72.78 110.391 l
71.88 109.191 l
71.04 107.691 l
70.14 105.951 l
68.88 103.311 l
62.16 90.471 l
61.26 88.911 l
60.54 87.651 l
59.58 86.811 l
58.68 86.451 l
57.24 86.331 l
55.86 86.331 l
54.96 86.691 l
53.64 88.071 l
52.38 89.571 l
51.3 91.191 l
49.86 92.931 l
48.96 94.011 l
48.96 94.371 l
49.56 94.851 l
50.4 94.671 l
51.06 94.251 l
52.38 93.351 l
53.46 92.931 l
54.06 92.931 l
54.78 93.351 l
55.38 94.671 l
57.12 97.791 l
60.84 105.531 l
62.76 109.791 l
63.3 111.111 l
63.54 112.071 l
63.36 112.551 l
63.06 112.551 l
62.22 112.191 l
60.84 111.351 l
50.88 104.331 l
41.34 97.731 l
27.42 87.471 l
26.64 90.231 l
37.98 98.571 l
h
37.98 98.571 m
50.1 107.631 l
63.12 116.391 l
64.8 117.651 l
66.24 118.131 l
67.38 118.131 l
68.04 117.771 l
69.78 116.571 l
70.86 115.311 l
72.18 113.811 l
72.84 112.671 l
72.9 111.531 l
72.78 110.391 l
71.88 109.191 l
71.04 107.691 l
70.14 105.951 l
68.88 103.311 l
62.16 90.471 l
61.26 88.911 l
60.54 87.651 l
59.58 86.811 l
58.68 86.451 l
57.24 86.331 l
55.86 86.331 l
54.96 86.691 l
53.64 88.071 l
52.38 89.571 l
51.3 91.191 l
49.86 92.931 l
48.96 94.011 l
48.96 94.371 l
49.56 94.851 l
50.4 94.671 l
51.06 94.251 l
52.38 93.351 l
53.46 92.931 l
54.06 92.931 l
54.78 93.351 l
55.38 94.671 l
57.12 97.791 l
60.84 105.531 l
62.76 109.791 l
63.3 111.111 l
63.54 112.071 l
63.36 112.551 l
63.06 112.551 l
62.22 112.191 l
60.84 111.351 l
50.88 104.331 l
41.34 97.731 l
27.42 87.471 l
26.64 90.231 l
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
111.12 132.831 m
111.24 131.931 l
111.3 131.151 l
111.3 130.431 l
111.3 129.711 l
111.24 128.631 l
111.18 127.911 l
111.12 126.651 l
110.76 126.171 l
110.4 125.091 l
109.86 124.611 l
109.68 124.491 l
109.5 124.071 l
109.5 123.531 l
109.62 123.111 l
109.68 122.451 l
109.68 121.971 l
109.62 121.131 l
109.44 120.771 l
109.32 120.531 l
109.02 119.931 l
108.48 119.391 l
108.12 119.271 l
107.82 118.971 l
107.7 118.611 l
107.7 118.131 l
107.82 117.471 l
108.3 116.811 l
108.48 115.911 l
108.66 115.131 l
108.96 113.991 l
109.14 112.791 l
109.5 112.311 l
110.04 111.951 l
110.64 111.771 l
111.24 111.651 l
111.84 111.891 l
112.56 112.071 l
113.1 112.671 l
113.94 113.271 l
114.3 114.051 l
114.72 114.711 l
115.26 115.911 l
115.98 116.931 l
116.82 118.131 l
117.6 119.031 l
118.44 119.691 l
119.4 120.651 l
120.3 121.431 l
121.26 122.151 l
122.28 122.991 l
123.54 124.131 l
124.38 124.851 l
132.36 128.991 l
133.56 129.711 l
134.88 130.371 l
135.84 130.851 l
136.32 131.451 l
137.04 132.111 l
138.0 132.531 l
138.96 132.891 l
139.62 133.191 l
139.98 133.131 l
139.86 132.591 l
139.44 131.871 l
138.6 130.551 l
137.7 128.571 l
136.5 126.291 l
135.18 124.551 l
134.7 123.711 l
134.22 123.231 l
133.86 122.871 l
133.38 122.871 l
132.78 123.171 l
132.12 123.351 l
131.52 123.351 l
131.34 122.871 l
131.28 122.091 l
131.64 121.131 l
132.12 120.231 l
132.48 119.511 l
133.08 118.671 l
133.8 117.951 l
134.52 117.291 l
134.88 117.291 l
135.42 117.291 l
135.84 117.651 l
136.26 118.131 l
136.92 118.851 l
137.76 119.631 l
138.66 120.291 l
139.8 121.071 l
140.52 121.851 l
141.12 122.511 l
142.08 123.231 l
142.62 123.831 l
143.46 124.731 l
144.54 125.811 l
145.92 127.251 l
147.42 128.931 l
148.32 129.771 l
148.74 130.371 l
149.1 131.151 l
149.04 131.871 l
148.8 132.531 l
148.5 133.131 l
147.78 133.911 l
146.94 135.231 l
146.4 135.891 l
146.04 136.671 l
146.04 137.631 l
145.86 138.351 l
145.2 138.831 l
144.54 139.131 l
143.58 139.131 l
143.04 139.011 l
142.2 138.711 l
141.24 138.111 l
140.28 137.391 l
139.38 136.971 l
137.76 136.011 l
136.56 135.531 l
126.6 131.391 l
125.22 130.551 l
123.42 129.651 l
121.74 128.631 l
120.3 127.551 l
118.56 126.591 l
117.48 125.811 l
117.0 125.511 l
116.58 125.031 l
116.16 124.971 l
116.1 125.511 l
116.04 126.651 l
115.74 128.091 l
115.2 129.711 l
114.72 131.511 l
114.0 132.951 l
113.58 134.271 l
112.98 135.051 l
111.96 135.531 l
111.24 135.531 l
110.88 135.171 l
110.76 134.631 l
110.64 133.671 l
110.88 132.831 l
111.12 132.831 l
h
114.36 107.031 m
112.26 106.431 l
109.2 105.591 l
106.44 104.571 l
104.1 103.731 l
100.8 102.471 l
97.38 101.091 l
95.16 100.071 l
92.28 98.751 l
90.66 97.971 l
89.58 97.491 l
88.56 97.311 l
87.42 97.131 l
86.16 96.951 l
85.02 96.951 l
83.94 97.011 l
82.92 96.951 l
82.38 96.291 l
82.2 95.271 l
82.2 94.011 l
82.8 92.871 l
83.94 91.371 l
85.14 89.331 l
86.16 88.251 l
86.94 87.411 l
87.84 86.931 l
88.56 86.631 l
89.34 86.631 l
90.24 87.051 l
91.38 87.711 l
92.52 88.911 l
94.26 90.471 l
96.48 92.211 l
97.86 93.111 l
99.6 93.771 l
101.4 94.671 l
104.28 95.871 l
107.34 97.071 l
109.38 97.851 l
111.06 98.751 l
113.4 99.831 l
116.4 101.211 l
128.46 105.771 l
131.52 106.791 l
134.52 107.871 l
137.76 109.071 l
140.34 110.031 l
141.72 110.631 l
142.5 111.171 l
142.86 111.171 l
142.86 110.691 l
142.5 110.331 l
141.66 109.671 l
140.46 108.771 l
139.32 107.931 l
138.6 107.331 l
138.48 107.091 l
138.72 106.851 l
139.32 107.151 l
139.98 107.571 l
141.72 108.471 l
142.8 108.951 l
143.76 109.191 l
144.66 109.191 l
146.28 108.951 l
147.36 108.951 l
148.32 109.191 l
149.34 109.491 l
150.96 109.911 l
153.54 111.051 l
155.1 111.891 l
156.3 112.731 l
156.96 113.751 l
157.2 115.011 l
157.14 116.031 l
156.54 116.931 l
155.58 117.891 l
154.26 118.551 l
152.4 119.031 l
151.2 119.271 l
150.06 119.331 l
148.8 119.271 l
147.42 118.971 l
146.58 118.371 l
145.86 117.771 l
144.84 117.171 l
143.04 116.451 l
139.98 115.431 l
137.58 114.531 l
134.58 113.631 l
131.28 112.371 l
128.22 111.351 l
114.36 107.091 l
114.36 107.031 l
h
127.92 138.111 m
127.44 135.351 l
126.6 132.831 l
123.72 121.851 l
122.46 118.131 l
121.56 114.891 l
120.48 111.771 l
115.26 99.351 l
114.3 96.771 l
113.52 94.971 l
112.56 93.531 l
112.26 92.091 l
112.14 90.891 l
112.08 89.811 l
112.44 88.731 l
113.4 87.171 l
114.6 85.251 l
115.5 84.411 l
116.1 84.111 l
117.48 83.931 l
118.92 83.811 l
120.3 83.751 l
125.94 81.831 l
126.36 81.471 l
127.02 80.991 l
128.22 80.391 l
129.36 80.271 l
130.5 80.271 l
131.34 80.571 l
132.12 80.991 l
132.9 81.771 l
133.14 83.031 l
133.14 84.051 l
133.14 85.251 l
133.14 85.971 l
132.78 86.631 l
132.06 87.531 l
131.4 88.071 l
130.68 88.731 l
129.24 89.391 l
128.16 89.691 l
121.98 90.111 l
121.2 89.991 l
120.36 89.751 l
119.64 89.811 l
118.98 90.471 l
118.56 91.071 l
118.44 91.731 l
118.62 92.511 l
119.22 94.011 l
119.94 95.931 l
120.9 98.331 l
122.22 101.931 l
126.48 112.311 l
128.7 116.871 l
130.08 120.411 l
132.36 126.171 l
132.84 127.911 l
136.26 136.251 l
137.64 139.251 l
138.3 140.631 l
139.02 141.771 l
139.38 142.851 l
139.38 143.691 l
139.08 144.951 l
138.36 146.091 l
137.58 147.111 l
136.56 148.191 l
135.24 148.971 l
133.98 149.811 l
132.9 149.991 l
131.34 150.291 l
130.02 150.351 l
128.58 150.231 l
127.62 149.871 l
127.14 148.911 l
127.14 148.071 l
127.44 147.351 l
128.22 146.751 l
128.88 145.851 l
129.24 144.711 l
129.24 143.211 l
128.7 140.571 l
127.86 138.171 l
127.92 138.111 l
h
123.66 94.971 m
123.3 93.651 l
122.4 91.371 l
121.98 90.471 l
118.98 83.151 l
117.72 81.291 l
116.58 80.211 l
115.62 79.011 l
114.24 77.511 l
112.62 75.831 l
110.94 74.331 l
109.2 72.351 l
107.76 70.611 l
106.38 69.231 l
105.0 68.271 l
103.86 67.431 l
102.72 66.471 l
101.28 65.691 l
99.9 65.031 l
98.58 64.731 l
97.38 64.731 l
96.36 64.911 l
95.22 65.271 l
94.02 65.391 l
92.46 65.811 l
90.78 66.291 l
89.76 66.651 l
89.22 66.711 l
88.56 66.771 l
87.84 66.291 l
87.6 65.331 l
87.42 64.071 l
87.3 62.871 l
87.42 61.671 l
87.66 60.711 l
88.32 60.111 l
88.98 59.691 l
90.24 59.391 l
91.32 59.211 l
94.14 58.971 l
95.22 58.791 l
96.48 58.731 l
97.62 58.731 l
98.94 58.851 l
100.02 59.211 l
101.16 59.751 l
102.9 60.411 l
104.46 61.131 l
106.2 61.971 l
108.06 63.171 l
109.14 63.951 l
109.86 64.611 l
110.76 65.151 l
111.42 65.931 l
112.02 66.711 l
112.98 67.551 l
114.0 68.811 l
115.5 70.191 l
116.88 71.691 l
118.5 73.491 l
120.36 75.531 l
122.22 77.631 l
123.96 80.031 l
125.04 81.411 l
128.52 89.751 l
128.88 90.711 l
129.36 91.911 l
130.08 93.831 l
130.68 95.031 l
130.92 95.991 l
130.92 96.951 l
131.1 97.311 l
131.7 97.851 l
132.18 98.751 l
132.24 99.291 l
132.06 99.831 l
131.7 100.491 l
130.92 101.331 l
129.96 102.231 l
129.0 102.951 l
128.28 103.491 l
127.26 104.271 l
126.54 104.811 l
125.7 105.951 l
124.32 105.411 l
123.66 104.451 l
123.96 103.311 l
124.38 102.111 l
124.98 100.971 l
125.1 100.131 l
125.1 98.871 l
124.68 97.311 l
124.14 95.991 l
f
n
181.56 128.631 m
180.42 128.211 l
178.86 127.491 l
177.72 127.071 l
176.64 126.471 l
175.86 126.351 l
174.96 126.351 l
174.3 126.411 l
173.28 126.651 l
173.04 126.531 l
172.74 126.411 l
172.5 125.751 l
172.62 124.911 l
173.04 124.011 l
173.7 123.531 l
174.84 122.991 l
175.98 122.631 l
177.0 122.571 l
179.04 122.511 l
180.84 122.451 l
182.22 122.871 l
184.08 123.471 l
186.42 124.251 l
190.44 125.751 l
193.08 126.831 l
194.34 127.491 l
195.3 128.211 l
195.78 128.451 l
196.14 128.451 l
196.14 128.331 l
195.84 127.851 l
195.36 127.311 l
195.0 126.651 l
195.18 126.231 l
195.78 126.111 l
196.74 126.471 l
198.18 127.311 l
200.34 128.331 l
203.04 129.531 l
205.26 130.551 l
207.9 131.571 l
209.46 132.231 l
210.66 132.531 l
211.32 132.771 l
211.68 133.611 l
211.62 134.391 l
211.2 135.351 l
210.42 136.071 l
209.22 136.551 l
207.84 137.331 l
206.58 137.871 l
205.62 138.171 l
204.48 138.291 l
203.52 138.231 l
202.56 137.871 l
201.78 137.391 l
200.34 136.671 l
198.24 135.831 l
196.74 134.991 l
196.14 134.751 l
195.6 134.811 l
195.54 135.171 l
195.84 135.831 l
196.5 136.911 l
196.74 137.271 l
196.98 138.111 l
196.92 138.831 l
196.56 139.251 l
196.08 139.971 l
195.36 140.511 l
194.16 141.351 l
192.36 142.311 l
191.22 142.791 l
189.9 143.451 l
188.58 144.051 l
187.14 144.411 l
186.06 144.471 l
185.1 144.471 l
184.68 144.111 l
184.44 143.391 l
184.56 142.371 l
184.92 141.411 l
185.28 140.211 l
185.64 138.411 l
185.7 136.911 l
185.76 135.291 l
185.76 134.031 l
185.64 132.051 l
185.4 131.271 l
185.34 130.611 l
184.98 130.191 l
184.38 129.711 l
183.54 129.411 l
182.58 129.111 l
181.56 128.631 l
h
179.76 115.011 m
178.74 113.751 l
177.6 112.491 l
176.22 111.291 l
174.72 110.031 l
173.58 109.011 l
173.04 108.171 l
172.14 106.911 l
171.42 105.951 l
171.12 104.871 l
171.0 103.851 l
171.12 103.011 l
171.72 102.471 l
172.5 102.291 l
173.52 102.291 l
174.42 102.711 l
175.2 103.431 l
176.52 104.451 l
177.9 105.711 l
179.58 106.851 l
180.66 107.331 l
181.44 107.811 l
182.16 108.051 l
183.06 108.171 l
184.26 107.931 l
185.1 107.931 l
186.24 108.351 l
187.08 109.011 l
188.4 109.671 l
189.24 110.391 l
190.5 111.531 l
191.52 112.431 l
192.72 113.271 l
193.98 114.411 l
194.4 115.131 l
195.0 115.311 l
195.42 115.191 l
195.72 114.591 l
195.42 113.871 l
194.7 112.911 l
193.98 111.831 l
193.44 111.351 l
193.14 110.331 l
193.2 109.971 l
193.44 109.611 l
194.04 109.251 l
194.88 109.191 l
196.2 109.551 l
197.52 110.271 l
199.02 111.291 l
200.46 112.191 l
201.42 112.851 l
202.32 113.271 l
203.94 113.811 l
205.32 114.231 l
205.98 115.131 l
206.16 115.971 l
205.86 117.411 l
205.44 118.251 l
204.66 118.971 l
203.16 119.511 l
201.42 120.351 l
200.34 121.131 l
199.08 121.791 l
198.24 122.511 l
197.64 122.631 l
197.1 122.631 l
196.2 122.331 l
195.42 121.551 l
194.1 120.351 l
192.78 118.971 l
190.86 117.291 l
189.24 116.151 l
187.62 115.011 l
186.54 114.591 l
185.7 114.291 l
184.98 114.591 l
184.56 115.191 l
184.44 116.211 l
184.56 117.411 l
184.68 118.671 l
184.68 119.991 l
184.32 120.531 l
183.54 120.831 l
183.0 120.771 l
182.34 120.171 l
181.98 119.031 l
181.68 117.951 l
181.08 116.511 l
179.76 115.191 l
179.76 115.011 l
h
188.64 100.551 m
184.38 92.511 l
180.9 88.071 l
177.78 84.291 l
174.54 80.751 l
171.48 77.871 l
167.34 74.391 l
164.04 72.351 l
161.28 70.791 l
159.36 70.011 l
157.98 69.531 l
157.5 69.291 l
157.14 68.931 l
156.96 68.571 l
157.2 68.211 l
157.56 67.851 l
158.52 67.551 l
159.6 67.431 l
161.88 67.671 l
164.4 68.511 l
166.68 69.531 l
169.14 70.791 l
171.66 72.411 l
174.0 73.851 l
177.18 76.311 l
180.9 79.611 l
184.56 83.271 l
187.38 86.031 l
193.98 95.271 l
196.2 97.911 l
197.4 99.831 l
197.94 100.911 l
198.18 101.511 l
198.3 101.871 l
198.18 102.231 l
198.0 102.711 l
196.98 103.731 l
195.18 105.231 l
194.16 106.551 l
193.26 107.511 l
192.54 108.231 l
191.82 108.351 l
191.34 108.411 l
190.92 108.291 l
190.5 107.871 l
190.14 106.851 l
190.02 105.711 l
189.96 104.691 l
189.78 103.431 l
188.64 100.551 l
h
182.94 97.071 m
184.56 94.611 l
189.6 86.331 l
191.34 83.691 l
192.96 81.111 l
194.16 78.771 l
195.6 76.731 l
197.52 74.391 l
199.2 72.891 l
200.94 71.451 l
202.56 70.311 l
203.22 69.891 l
204.24 69.711 l
205.44 69.891 l
207.18 70.311 l
211.32 70.731 l
215.1 71.091 l
216.72 71.271 l
217.8 71.631 l
217.98 71.991 l
217.98 72.351 l
217.86 72.651 l
217.62 73.011 l
216.42 73.551 l
214.98 74.091 l
213.42 74.811 l
211.38 76.251 l
209.1 77.871 l
206.64 79.491 l
204.06 81.771 l
201.96 83.691 l
200.04 85.971 l
197.88 88.491 l
196.08 90.831 l
194.4 92.571 l
189.06 97.371 l
186.3 99.171 l
184.56 100.551 l
182.76 102.051 l
181.08 103.131 l
180.0 104.211 l
178.86 104.751 l
178.08 104.811 l
177.6 104.691 l
177.42 104.391 l
177.36 104.031 l
177.36 103.731 l
177.36 103.371 l
177.96 102.591 l
178.86 101.751 l
180.12 100.551 l
180.96 99.651 l
181.68 98.931 l
f
n
227.88 99.771 m
228.6 97.971 l
229.08 95.991 l
229.44 95.331 l
229.8 94.611 l
230.04 94.251 l
230.64 93.951 l
231.6 93.831 l
232.2 93.771 l
232.92 93.951 l
233.4 94.131 l
233.94 94.551 l
234.3 94.971 l
234.66 95.511 l
235.08 96.711 l
235.32 98.391 l
235.14 99.711 l
234.84 100.311 l
234.48 100.971 l
233.94 101.451 l
233.4 101.871 l
232.62 102.651 l
230.88 104.091 l
229.56 105.111 l
228.54 105.771 l
227.22 106.371 l
226.32 106.551 l
225.6 106.431 l
225.18 106.131 l
225.06 105.591 l
225.24 105.051 l
225.66 104.631 l
226.14 103.551 l
226.8 102.351 l
227.88 99.771 l
h
249.24 133.491 m
247.5 132.411 l
245.94 131.451 l
243.84 130.251 l
241.74 129.231 l
240.06 128.331 l
239.16 127.731 l
238.26 127.131 l
237.06 126.651 l
235.74 126.171 l
234.66 125.871 l
233.94 125.631 l
233.4 125.391 l
233.04 124.971 l
232.86 124.491 l
232.86 123.771 l
233.28 123.231 l
233.88 122.811 l
235.02 122.391 l
236.4 121.671 l
237.66 121.071 l
238.62 120.711 l
239.52 120.351 l
240.42 120.171 l
241.2 120.171 l
241.62 120.291 l
242.1 120.591 l
244.02 121.971 l
248.94 126.411 l
253.98 130.971 l
257.22 133.851 l
258.66 135.351 l
259.86 136.251 l
260.64 136.791 l
261.12 136.911 l
261.24 136.791 l
261.3 136.671 l
261.24 136.491 l
261.18 136.191 l
260.82 135.651 l
260.22 134.931 l
259.56 134.091 l
258.66 132.951 l
257.94 131.991 l
257.34 131.091 l
256.74 130.251 l
256.38 129.531 l
256.08 128.871 l
255.96 128.091 l
255.96 127.611 l
256.08 126.951 l
256.38 126.471 l
256.8 126.171 l
257.28 125.871 l
257.7 125.571 l
257.7 125.331 l
257.7 125.151 l
257.64 125.031 l
257.28 124.731 l
256.32 124.191 l
255.0 123.171 l
253.14 122.031 l
252.06 121.191 l
251.58 120.831 l
251.52 120.651 l
251.52 120.531 l
251.52 120.291 l
251.64 120.171 l
251.82 120.171 l
252.24 120.111 l
252.84 120.291 l
253.98 120.651 l
255.66 121.371 l
257.4 121.911 l
258.78 122.511 l
259.98 122.931 l
261.42 123.111 l
262.8 123.231 l
263.76 123.411 l
264.9 123.771 l
265.62 124.191 l
265.98 124.611 l
266.34 124.911 l
266.58 125.151 l
266.64 125.571 l
266.64 126.591 l
266.58 126.891 l
266.52 127.311 l
266.1 128.091 l
265.26 128.691 l
264.6 129.291 l
264.0 129.651 l
263.58 129.891 l
263.34 130.191 l
263.16 130.551 l
263.46 130.971 l
263.82 131.451 l
265.02 132.831 l
266.04 134.091 l
267.0 135.591 l
268.14 137.331 l
269.04 138.711 l
269.58 139.731 l
270.0 140.631 l
270.0 141.231 l
269.88 142.131 l
269.46 142.551 l
268.62 142.791 l
268.02 143.151 l
266.88 143.511 l
265.68 143.751 l
264.9 143.871 l
264.18 144.051 l
263.82 144.111 l
263.52 143.931 l
263.04 143.811 l
262.26 143.271 l
261.42 142.431 l
259.68 141.231 l
257.64 139.671 l
249.24 133.491 l
h
230.88 90.291 m
230.82 89.691 l
230.82 89.031 l
231.0 88.491 l
231.54 87.951 l
232.02 87.291 l
232.86 86.511 l
233.1 85.791 l
233.16 85.251 l
233.1 84.651 l
232.98 84.111 l
232.56 83.631 l
232.02 83.091 l
231.42 83.031 l
230.34 83.151 l
229.44 83.451 l
228.48 83.511 l
227.28 83.511 l
226.08 83.451 l
224.76 83.151 l
223.5 83.031 l
222.96 82.611 l
222.66 82.311 l
222.6 81.711 l
222.9 81.411 l
223.32 81.171 l
224.46 81.051 l
225.9 80.931 l
227.46 80.751 l
229.02 80.271 l
230.4 79.851 l
232.26 78.951 l
234.42 78.051 l
239.82 76.191 l
243.54 74.811 l
248.04 73.191 l
252.54 71.271 l
256.32 69.531 l
258.54 68.091 l
259.8 67.191 l
260.94 66.771 l
262.26 66.471 l
263.28 66.231 l
264.12 66.351 l
265.26 66.651 l
266.52 67.371 l
268.32 68.691 l
271.5 70.611 l
276.12 73.311 l
279.66 75.051 l
280.74 75.771 l
280.86 76.191 l
280.92 76.551 l
280.86 76.791 l
280.8 77.031 l
280.32 77.391 l
279.78 77.511 l
279.24 77.511 l
278.7 77.271 l
278.04 77.031 l
276.84 76.731 l
275.52 76.311 l
273.24 76.071 l
270.72 75.651 l
267.9 75.651 l
266.34 75.771 l
264.42 75.951 l
261.36 76.311 l
258.18 76.911 l
255.0 77.511 l
250.98 78.351 l
247.02 78.951 l
244.26 79.611 l
241.44 80.271 l
239.1 81.111 l
236.52 81.831 l
235.14 82.191 l
234.36 82.371 l
234.24 82.671 l
234.36 83.091 l
234.84 83.451 l
235.92 84.411 l
236.52 85.011 l
237.18 85.851 l
237.36 86.991 l
237.3 87.831 l
236.88 88.551 l
236.16 89.571 l
235.26 90.231 l
234.66 90.711 l
233.82 90.951 l
233.16 91.131 l
232.44 91.311 l
231.66 91.131 l
231.3 91.011 l
231.0 90.711 l
230.88 90.231 l
230.88 90.291 l
h
255.3 118.791 m
253.92 117.591 l
252.42 116.451 l
250.5 114.471 l
248.7 112.371 l
247.2 110.331 l
246.3 108.951 l
245.28 107.691 l
241.32 101.571 l
240.72 100.551 l
240.0 99.351 l
239.82 97.731 l
239.64 95.931 l
239.82 93.771 l
240.0 92.091 l
240.36 90.591 l
240.78 89.031 l
241.56 87.891 l
242.16 87.291 l
242.88 87.231 l
243.72 87.231 l
244.74 87.531 l
245.52 88.131 l
246.36 88.971 l
246.9 90.531 l
247.02 92.691 l
246.96 95.331 l
246.78 97.071 l
246.36 99.171 l
246.0 100.611 l
245.58 102.051 l
245.04 105.351 l
244.86 110.571 l
244.98 112.491 l
244.8 113.631 l
244.56 114.051 l
244.14 114.111 l
243.84 114.111 l
243.54 113.631 l
243.12 112.491 l
242.88 111.231 l
242.4 108.171 l
241.98 105.891 l
241.56 102.711 l
241.38 99.771 l
242.88 98.631 l
244.8 103.071 l
246.6 105.891 l
248.58 108.411 l
250.26 110.091 l
254.28 113.871 l
255.72 115.311 l
257.28 116.691 l
257.88 117.171 l
258.72 117.591 l
259.8 117.711 l
260.64 117.651 l
261.12 117.291 l
261.66 116.451 l
261.72 115.611 l
261.96 114.651 l
261.96 113.151 l
262.02 111.471 l
262.08 108.831 l
262.08 106.671 l
262.08 103.131 l
262.08 99.771 l
262.08 97.311 l
262.08 94.791 l
262.08 92.031 l
261.96 90.171 l
261.84 88.671 l
261.54 87.591 l
261.3 86.991 l
260.88 86.691 l
260.52 86.391 l
260.28 86.331 l
259.86 86.211 l
258.66 86.211 l
257.46 86.271 l
256.2 86.391 l
255.3 86.571 l
254.82 86.211 l
254.76 85.851 l
254.82 85.371 l
255.12 84.771 l
255.48 84.171 l
256.8 83.151 l
257.88 82.011 l
259.02 81.171 l
260.28 80.511 l
261.24 80.271 l
262.08 80.271 l
262.44 80.391 l
262.86 80.391 l
263.34 80.631 l
263.76 80.871 l
264.66 81.531 l
265.44 82.431 l
265.98 83.751 l
266.46 85.011 l
266.82 86.571 l
267.0 89.331 l
267.18 92.691 l
267.24 95.571 l
267.18 98.811 l
267.24 101.871 l
267.18 105.291 l
267.0 108.171 l
267.0 111.111 l
266.64 114.711 l
266.46 117.471 l
266.28 118.791 l
265.86 120.051 l
265.44 120.711 l
264.72 121.191 l
264.18 121.491 l
263.4 121.671 l
262.5 121.791 l
261.6 121.671 l
260.7 121.611 l
259.62 121.371 l
258.78 120.951 l
257.64 120.171 l
256.56 119.511 l
255.42 118.791 l
255.3 118.791 l
h
248.82 105.711 m
249.6 104.991 l
249.84 104.511 l
249.96 103.851 l
249.96 103.131 l
249.96 102.111 l
249.9 101.391 l
249.78 100.671 l
249.36 99.831 l
248.94 99.051 l
248.52 98.451 l
248.22 97.671 l
248.1 97.191 l
248.04 96.711 l
248.22 96.111 l
248.58 95.511 l
248.94 95.091 l
249.66 94.911 l
250.32 94.971 l
251.22 95.091 l
252.0 95.391 l
253.98 96.291 l
256.56 98.091 l
257.4 98.751 l
258.06 99.411 l
258.78 100.131 l
259.38 101.031 l
259.56 101.751 l
259.56 102.711 l
259.5 103.791 l
259.26 104.391 l
259.08 104.931 l
258.9 105.231 l
258.6 105.471 l
257.64 106.131 l
257.04 106.611 l
256.08 107.211 l
255.3 107.631 l
254.34 107.751 l
253.92 106.431 l
253.98 104.991 l
254.4 104.151 l
255.0 103.671 l
255.78 103.551 l
256.38 103.311 l
256.56 102.831 l
256.56 102.411 l
256.5 101.931 l
256.02 101.571 l
255.42 101.571 l
255.0 101.751 l
254.64 102.531 l
253.92 104.091 l
253.02 105.771 l
252.54 106.431 l
252.12 106.731 l
251.7 107.211 l
250.98 107.451 l
250.32 107.631 l
249.36 107.751 l
248.46 107.751 l
247.8 107.871 l
247.02 107.631 l
246.72 107.091 l
246.54 106.611 l
246.96 106.371 l
247.5 106.371 l
248.16 106.191 l
248.82 105.711 l
h
252.06 109.191 m
252.24 108.291 l
252.3 107.511 l
252.3 106.791 l
252.42 105.471 l
252.48 99.831 l
252.24 94.971 l
252.18 93.651 l
252.06 92.691 l
251.82 91.371 l
251.7 90.051 l
251.64 89.151 l
251.64 88.011 l
251.64 87.231 l
251.82 86.271 l
252.18 85.791 l
252.42 85.371 l
253.08 84.891 l
253.92 84.771 l
254.46 84.651 l
255.54 84.951 l
255.78 85.851 l
256.2 86.931 l
256.38 88.311 l
256.38 89.811 l
256.38 91.971 l
256.2 93.951 l
256.08 95.511 l
255.9 97.191 l
255.3 100.251 l
255.18 104.271 l
255.18 106.791 l
255.24 108.651 l
255.3 109.731 l
255.3 111.471 l
255.3 112.731 l
255.24 113.151 l
255.06 113.571 l
254.64 113.811 l
253.74 114.231 l
252.3 113.871 l
251.28 112.851 l
251.16 111.831 l
251.64 110.631 l
251.76 110.091 l
f
n
321.3 132.291 m
320.7 130.371 l
320.1 128.211 l
319.32 125.931 l
318.6 123.711 l
317.88 121.071 l
317.04 118.311 l
315.96 115.371 l
310.08 103.251 l
308.7 100.371 l
307.62 98.451 l
306.3 96.711 l
305.22 94.851 l
304.26 93.531 l
303.3 92.271 l
302.4 91.011 l
300.96 89.331 l
299.22 87.231 l
296.76 84.171 l
293.34 80.391 l
289.98 76.731 l
287.22 73.731 l
285.78 72.351 l
284.34 71.151 l
282.96 69.831 l
281.7 68.511 l
281.52 68.091 l
281.52 67.551 l
281.7 67.431 l
282.18 67.431 l
282.84 67.431 l
283.68 67.791 l
284.64 68.271 l
286.32 69.411 l
287.88 70.251 l
289.8 71.391 l
291.42 72.411 l
293.4 73.791 l
295.92 75.471 l
298.38 77.211 l
300.9 79.251 l
302.52 80.571 l
304.56 82.671 l
306.06 84.111 l
307.92 86.271 l
309.54 88.371 l
311.4 90.651 l
312.96 92.811 l
314.22 94.551 l
316.8 98.451 l
318.6 101.451 l
319.8 103.851 l
320.52 106.371 l
322.26 111.771 l
324.66 118.311 l
325.44 120.291 l
326.82 123.351 l
327.6 125.931 l
328.32 128.391 l
329.16 130.731 l
329.64 131.691 l
330.18 132.831 l
330.3 133.911 l
330.3 134.991 l
330.0 135.771 l
328.98 136.971 l
328.08 138.051 l
326.88 139.011 l
326.04 139.791 l
325.02 140.151 l
323.94 140.091 l
323.04 139.551 l
322.38 138.711 l
322.08 137.631 l
322.08 136.311 l
322.02 134.931 l
321.84 133.791 l
321.36 132.291 l
321.3 132.291 l
h
301.62 107.151 m
302.16 106.671 l
303.42 105.711 l
304.14 105.051 l
304.8 104.811 l
305.52 104.691 l
306.72 104.631 l
308.1 104.631 l
309.54 104.631 l
312.24 104.991 l
319.56 107.331 l
322.62 108.891 l
325.26 109.671 l
327.6 110.151 l
329.64 110.631 l
331.38 111.231 l
333.06 111.951 l
334.02 112.671 l
334.62 113.331 l
334.8 114.471 l
334.44 115.791 l
333.84 116.631 l
333.0 117.531 l
331.62 118.311 l
330.42 118.971 l
329.34 119.511 l
328.26 119.691 l
327.42 119.511 l
326.88 118.971 l
326.28 118.131 l
325.26 117.471 l
320.46 115.431 l
316.08 114.111 l
312.6 113.091 l
310.08 112.251 l
307.92 111.351 l
306.48 110.991 l
304.98 110.631 l
303.72 110.631 l
302.4 110.631 l
301.32 110.931 l
300.42 110.991 l
299.82 110.931 l
299.4 110.271 l
299.34 109.671 l
299.76 109.071 l
299.94 108.891 l
300.48 108.171 l
301.08 107.631 l
301.62 107.151 l
h
319.98 87.891 m
321.66 85.251 l
322.98 83.091 l
324.18 80.991 l
325.32 79.191 l
326.1 77.931 l
327.42 77.091 l
328.74 76.551 l
330.18 76.491 l
331.74 76.551 l
333.48 76.971 l
334.98 77.931 l
336.42 79.191 l
337.86 80.091 l
339.36 81.291 l
340.86 82.071 l
341.82 82.851 l
342.48 83.511 l
342.78 84.231 l
342.66 85.071 l
342.18 85.311 l
341.76 85.311 l
341.34 85.191 l
340.74 84.891 l
339.78 84.771 l
338.7 84.531 l
336.96 84.831 l
336.0 84.951 l
334.38 85.551 l
332.28 86.331 l
329.94 87.591 l
326.28 89.631 l
322.68 91.851 l
320.4 93.591 l
318.9 94.971 l
317.76 95.931 l
316.92 96.651 l
316.44 97.071 l
316.08 97.671 l
315.84 98.751 l
314.28 98.391 l
313.02 97.071 l
313.32 95.931 l
313.98 95.211 l
314.88 94.611 l
315.6 94.011 l
316.38 93.051 l
317.4 91.731 l
318.48 90.111 l
f
n
356.04 126.411 m
356.52 124.611 l
356.88 122.811 l
357.36 121.071 l
357.84 119.091 l
358.2 117.351 l
358.5 115.611 l
358.38 114.831 l
358.5 114.051 l
358.68 113.511 l
359.16 112.731 l
359.7 111.951 l
360.36 111.531 l
361.14 111.351 l
362.1 111.231 l
362.58 111.351 l
363.42 111.831 l
364.02 112.311 l
364.56 113.091 l
364.8 113.811 l
365.04 114.831 l
365.1 115.791 l
364.92 116.811 l
364.74 117.951 l
364.26 119.091 l
363.72 120.351 l
363.12 121.671 l
362.46 122.811 l
361.74 123.831 l
361.08 125.031 l
360.24 126.171 l
359.4 127.251 l
358.38 128.331 l
357.42 129.351 l
356.88 130.191 l
356.52 130.431 l
356.16 130.671 l
355.92 130.671 l
355.62 130.431 l
355.56 130.251 l
355.32 129.891 l
355.32 129.471 l
355.5 128.811 l
355.68 127.791 l
355.8 127.071 l
356.04 126.291 l
356.04 126.411 l
h
356.76 101.031 m
355.8 99.771 l
355.02 98.571 l
354.48 97.731 l
354.0 96.831 l
353.52 95.931 l
352.92 94.911 l
352.32 93.531 l
351.96 92.211 l
351.6 90.771 l
351.3 89.751 l
351.18 88.491 l
350.94 87.291 l
350.82 86.211 l
350.88 84.891 l
350.94 83.751 l
351.18 83.091 l
351.6 82.431 l
352.02 81.831 l
352.5 81.411 l
353.28 80.991 l
353.82 80.931 l
354.42 81.051 l
354.9 81.531 l
355.44 82.011 l
356.1 82.731 l
356.76 83.451 l
357.24 84.411 l
357.78 85.011 l
358.38 86.331 l
359.22 88.071 l
359.82 89.871 l
360.36 91.551 l
360.9 93.171 l
361.2 93.951 l
361.38 94.611 l
361.62 95.451 l
361.8 95.871 l
362.1 96.351 l
362.58 96.651 l
363.06 97.011 l
363.54 97.431 l
363.6 97.911 l
363.6 98.391 l
363.48 98.751 l
362.94 98.811 l
362.52 98.811 l
361.98 98.571 l
361.44 98.331 l
360.78 97.671 l
360.0 96.831 l
359.16 95.751 l
358.56 94.911 l
357.78 93.771 l
357.06 92.331 l
356.52 91.131 l
355.74 89.631 l
355.32 88.731 l
354.9 88.071 l
354.6 87.831 l
354.24 87.591 l
353.94 87.711 l
353.82 88.071 l
353.7 88.851 l
353.58 89.391 l
353.7 90.231 l
353.82 91.071 l
354.24 91.971 l
354.84 93.051 l
355.5 94.071 l
356.4 95.091 l
357.36 96.531 l
357.96 97.251 l
358.56 98.151 l
358.98 98.811 l
359.34 99.471 l
359.52 100.191 l
359.7 100.971 l
359.82 101.871 l
360.0 102.711 l
360.0 103.551 l
359.94 104.271 l
359.7 104.871 l
359.22 105.231 l
359.04 105.231 l
358.74 105.231 l
358.5 105.051 l
358.32 104.811 l
358.14 104.391 l
357.9 103.791 l
357.72 103.251 l
357.3 102.411 l
356.76 101.031 l
h
382.08 100.311 m
380.4 99.411 l
378.48 98.511 l
376.5 97.731 l
374.4 97.191 l
372.84 96.831 l
371.64 96.711 l
370.8 96.591 l
370.08 96.531 l
369.84 96.531 l
369.54 96.291 l
369.42 95.931 l
369.48 95.331 l
369.78 94.611 l
370.14 94.071 l
370.92 93.231 l
371.7 92.811 l
372.18 92.631 l
373.02 92.331 l
373.92 92.211 l
374.7 92.091 l
375.54 92.091 l
376.08 92.391 l
376.86 92.871 l
378.18 93.531 l
379.68 94.191 l
380.88 94.791 l
381.66 95.271 l
382.2 95.571 l
382.5 95.571 l
382.5 95.391 l
382.26 95.031 l
382.08 94.611 l
381.6 93.951 l
380.7 93.231 l
380.04 92.631 l
379.5 92.091 l
379.38 91.851 l
379.14 91.491 l
379.08 91.131 l
379.26 90.951 l
379.68 90.951 l
380.28 91.011 l
381.0 91.431 l
381.96 91.851 l
383.16 92.631 l
384.42 93.531 l
386.46 94.971 l
388.2 96.231 l
389.82 97.731 l
390.84 98.931 l
391.38 99.771 l
391.74 100.611 l
391.86 101.451 l
391.86 102.291 l
391.68 102.531 l
391.44 102.831 l
391.26 102.951 l
390.9 103.071 l
390.12 103.251 l
389.34 103.191 l
388.2 103.131 l
387.3 102.831 l
386.4 102.471 l
385.32 102.111 l
384.42 101.751 l
383.16 101.031 l
382.08 100.311 l
h
383.04 90.111 m
381.0 88.851 l
379.5 88.131 l
378.06 87.531 l
376.56 86.691 l
373.86 85.371 l
372.72 84.891 l
371.82 84.651 l
370.44 84.111 l
368.7 83.631 l
367.44 83.271 l
365.94 83.091 l
364.86 82.911 l
363.72 82.731 l
362.88 82.431 l
362.16 82.011 l
361.86 81.711 l
361.8 81.051 l
361.86 80.451 l
362.1 79.971 l
362.58 79.251 l
363.36 78.711 l
364.14 78.411 l
364.92 78.291 l
366.0 78.051 l
366.96 78.051 l
368.04 78.231 l
368.94 78.411 l
370.5 79.131 l
372.3 79.851 l
375.0 81.171 l
377.94 82.611 l
381.78 84.591 l
385.74 86.511 l
387.3 87.231 l
389.04 88.071 l
389.82 88.431 l
390.0 88.551 l
390.42 88.491 l
390.48 88.371 l
390.48 88.131 l
390.3 87.831 l
389.94 87.471 l
389.46 87.111 l
388.74 86.691 l
388.08 86.271 l
387.72 85.851 l
387.72 85.431 l
387.9 85.251 l
388.26 85.251 l
388.68 85.251 l
389.46 85.491 l
390.84 86.091 l
392.28 86.391 l
394.2 86.811 l
396.06 87.471 l
397.44 88.011 l
398.16 88.071 l
399.12 88.131 l
400.02 88.311 l
400.86 88.431 l
401.4 88.731 l
402.12 89.031 l
402.66 89.691 l
403.02 90.231 l
403.14 91.131 l
403.14 92.091 l
403.02 92.871 l
402.6 93.531 l
402.06 93.951 l
401.28 94.431 l
400.38 94.611 l
399.42 94.911 l
398.76 94.971 l
397.92 95.091 l
397.26 95.271 l
396.78 95.211 l
396.18 95.091 l
395.76 94.911 l
395.28 94.791 l
394.62 94.551 l
393.96 94.431 l
393.42 94.191 l
392.7 93.711 l
392.16 93.171 l
391.56 92.871 l
390.72 92.511 l
389.82 92.391 l
388.68 92.331 l
387.84 92.211 l
386.94 91.971 l
385.98 91.731 l
385.02 91.131 l
384.18 90.771 l
382.98 90.111 l
383.04 90.111 l
h
381.54 80.451 m
381.66 78.951 l
381.6 76.791 l
381.6 73.731 l
381.6 70.131 l
381.6 67.671 l
381.42 66.591 l
381.36 65.211 l
381.36 64.311 l
381.12 63.651 l
380.7 63.291 l
380.4 63.231 l
380.04 63.291 l
379.38 63.651 l
377.64 64.431 l
376.5 64.731 l
375.18 65.151 l
374.28 65.331 l
373.26 65.391 l
371.7 65.511 l
370.32 66.051 l
369.36 66.651 l
368.52 67.191 l
367.86 67.491 l
367.44 67.551 l
367.2 67.431 l
367.08 67.131 l
367.2 66.651 l
367.44 66.111 l
368.34 65.211 l
369.48 64.071 l
370.8 62.871 l
372.84 61.671 l
375.06 60.111 l
376.8 58.311 l
378.48 56.871 l
379.68 55.731 l
380.46 55.311 l
381.18 54.951 l
382.14 54.531 l
382.86 54.531 l
383.52 54.471 l
384.18 54.471 l
384.78 54.831 l
385.2 55.191 l
385.56 55.611 l
385.98 56.271 l
386.34 56.991 l
387.06 58.971 l
387.84 60.831 l
388.32 62.871 l
388.56 64.491 l
388.62 67.071 l
388.62 69.771 l
388.32 71.931 l
388.14 74.211 l
387.66 76.131 l
387.0 77.931 l
386.34 79.971 l
385.62 81.411 l
384.9 82.671 l
384.48 83.271 l
383.94 83.811 l
383.46 84.351 l
382.92 84.651 l
382.26 85.371 l
381.36 85.431 l
380.4 85.251 l
380.28 84.471 l
380.76 83.691 l
381.3 82.791 l
381.6 81.711 l
381.6 80.511 l
381.54 80.451 l
h
362.82 144.471 m
364.14 142.371 l
365.34 140.271 l
366.96 137.571 l
368.22 135.411 l
369.06 134.331 l
369.6 133.431 l
370.02 132.531 l
370.5 131.511 l
370.86 130.551 l
371.16 129.291 l
371.16 128.151 l
370.98 127.071 l
370.74 125.871 l
370.26 124.551 l
369.78 123.771 l
369.36 123.351 l
369.0 123.111 l
368.64 122.871 l
368.22 122.751 l
367.92 122.691 l
367.62 122.751 l
367.2 122.811 l
366.78 122.871 l
366.06 123.531 l
365.52 124.431 l
365.04 125.811 l
364.68 127.971 l
364.26 129.771 l
363.9 131.631 l
363.3 133.731 l
362.58 135.831 l
361.98 137.751 l
361.26 139.671 l
360.72 141.171 l
360.24 143.151 l
359.88 144.891 l
359.64 145.671 l
359.46 146.451 l
359.46 147.111 l
359.64 147.291 l
360.0 147.411 l
360.36 147.231 l
360.9 146.691 l
361.32 145.971 l
362.1 145.251 l
362.7 144.531 l
362.82 144.471 l
h
389.22 146.691 m
387.6 145.191 l
385.56 143.751 l
383.7 142.191 l
382.02 141.171 l
380.76 140.331 l
379.5 139.551 l
377.82 138.411 l
376.8 138.051 l
375.9 138.531 l
375.72 139.491 l
376.2 140.091 l
377.76 141.411 l
378.72 142.311 l
379.62 143.631 l
380.7 145.491 l
381.6 146.931 l
382.38 148.731 l
383.28 150.711 l
384.3 152.211 l
384.48 153.471 l
384.48 154.491 l
384.36 155.571 l
384.0 156.111 l
383.58 156.711 l
383.28 157.251 l
383.1 157.851 l
383.34 158.571 l
383.76 159.051 l
384.6 159.531 l
385.32 159.591 l
386.22 159.531 l
387.06 159.351 l
387.9 158.871 l
388.56 158.331 l
388.98 157.851 l
389.46 157.311 l
390.24 156.531 l
390.96 155.811 l
391.74 155.031 l
392.28 154.371 l
392.94 153.831 l
393.24 153.351 l
393.42 152.511 l
393.54 151.671 l
393.48 151.071 l
393.0 150.351 l
392.22 149.511 l
391.26 148.671 l
390.0 147.591 l
389.22 146.691 l
h
373.98 138.891 m
373.44 138.111 l
373.26 137.571 l
373.08 136.731 l
373.32 136.071 l
373.74 135.471 l
374.22 134.631 l
375.12 133.491 l
375.66 132.771 l
376.08 132.051 l
376.32 131.631 l
376.2 131.151 l
376.08 130.551 l
375.78 129.651 l
375.48 128.571 l
375.0 127.491 l
372.12 120.831 l
370.02 117.111 l
367.32 112.491 l
365.22 109.251 l
363.96 107.691 l
363.42 107.271 l
363.0 106.731 l
362.82 106.191 l
362.7 105.531 l
363.0 105.351 l
363.18 105.291 l
363.6 105.291 l
364.2 105.531 l
364.86 105.951 l
366.12 107.031 l
367.62 108.471 l
369.84 110.691 l
372.42 113.871 l
374.46 116.811 l
379.44 124.551 l
380.64 126.591 l
381.54 128.031 l
381.78 128.931 l
382.08 129.291 l
382.68 129.471 l
383.46 129.471 l
384.3 130.071 l
384.9 130.671 l
385.2 131.451 l
385.26 132.471 l
385.08 133.671 l
384.72 134.511 l
384.24 135.411 l
383.46 136.071 l
382.68 136.911 l
381.42 138.051 l
380.52 138.411 l
379.86 138.471 l
379.44 138.471 l
379.08 138.711 l
378.9 138.951 l
378.48 139.251 l
376.92 139.671 l
375.78 139.791 l
375.18 139.731 l
374.64 139.371 l
373.92 138.891 l
373.98 138.891 l
h
373.98 138.891 m
373.44 138.111 l
373.26 137.571 l
373.08 136.731 l
373.32 136.071 l
373.74 135.471 l
374.22 134.631 l
375.12 133.491 l
375.66 132.771 l
376.08 132.051 l
376.32 131.631 l
376.2 131.151 l
376.08 130.551 l
375.78 129.651 l
375.48 128.571 l
375.0 127.491 l
372.12 120.831 l
370.02 117.111 l
367.32 112.491 l
365.22 109.251 l
363.96 107.691 l
363.42 107.271 l
363.0 106.731 l
362.82 106.191 l
362.7 105.531 l
363.0 105.351 l
363.18 105.291 l
363.6 105.291 l
364.2 105.531 l
364.86 105.951 l
366.12 107.031 l
367.62 108.471 l
369.84 110.691 l
372.42 113.871 l
374.46 116.811 l
379.44 124.551 l
380.64 126.591 l
381.54 128.031 l
381.78 128.931 l
382.08 129.291 l
382.68 129.471 l
383.46 129.471 l
384.3 130.071 l
384.9 130.671 l
385.2 131.451 l
385.26 132.471 l
385.08 133.671 l
384.72 134.511 l
384.24 135.411 l
383.46 136.071 l
382.68 136.911 l
381.42 138.051 l
380.52 138.411 l
379.86 138.471 l
379.44 138.471 l
379.08 138.711 l
378.9 138.951 l
378.48 139.251 l
376.92 139.671 l
375.78 139.791 l
375.18 139.731 l
374.64 139.371 l
373.92 138.891 l
373.98 138.891 l
h
388.8 133.251 m
389.4 131.691 l
390.06 130.251 l
390.36 129.471 l
390.36 128.931 l
390.12 128.451 l
389.16 127.191 l
387.72 125.931 l
386.1 124.311 l
384.48 122.931 l
382.62 121.371 l
382.08 121.071 l
381.72 121.071 l
381.24 121.191 l
380.7 121.791 l
379.98 122.511 l
379.26 123.111 l
377.04 124.671 l
373.8 126.291 l
372.66 126.771 l
371.7 127.071 l
369.96 127.371 l
368.94 126.591 l
368.64 124.971 l
369.0 124.071 l
370.26 123.651 l
371.22 122.691 l
372.0 121.911 l
373.5 120.171 l
375.42 117.591 l
376.14 116.631 l
376.62 115.611 l
377.22 115.011 l
377.82 114.591 l
378.36 114.411 l
379.14 114.231 l
379.92 114.411 l
380.82 114.711 l
381.54 115.311 l
382.38 116.271 l
383.82 117.651 l
385.56 119.751 l
387.24 121.011 l
388.98 122.391 l
390.42 123.411 l
391.68 124.251 l
392.04 124.491 l
392.4 124.551 l
393.0 124.731 l
393.9 125.091 l
394.8 125.811 l
395.34 126.591 l
395.7 127.491 l
396.0 128.391 l
396.12 129.351 l
395.94 130.071 l
395.58 130.971 l
395.1 131.931 l
394.56 133.011 l
393.54 134.091 l
392.58 135.171 l
391.62 136.071 l
390.48 137.151 l
389.7 137.811 l
388.8 138.411 l
387.72 139.251 l
387.18 139.671 l
386.34 139.971 l
385.86 139.431 l
385.86 138.831 l
386.4 137.991 l
387.0 136.791 l
387.6 136.071 l
388.2 134.991 l
388.8 133.251 l
h
388.8 133.251 m
389.4 131.691 l
390.06 130.251 l
390.36 129.471 l
390.36 128.931 l
390.12 128.451 l
389.16 127.191 l
387.72 125.931 l
386.1 124.311 l
384.48 122.931 l
382.62 121.371 l
382.08 121.071 l
381.72 121.071 l
381.24 121.191 l
380.7 121.791 l
379.98 122.511 l
379.26 123.111 l
377.04 124.671 l
373.8 126.291 l
372.66 126.771 l
371.7 127.071 l
369.96 127.371 l
368.94 126.591 l
368.64 124.971 l
369.0 124.071 l
370.26 123.651 l
371.22 122.691 l
372.0 121.911 l
373.5 120.171 l
375.42 117.591 l
376.14 116.631 l
376.62 115.611 l
377.22 115.011 l
377.82 114.591 l
378.36 114.411 l
379.14 114.231 l
379.92 114.411 l
380.82 114.711 l
381.54 115.311 l
382.38 116.271 l
383.82 117.651 l
385.56 119.751 l
387.24 121.011 l
388.98 122.391 l
390.42 123.411 l
391.68 124.251 l
392.04 124.491 l
392.4 124.551 l
393.0 124.731 l
393.9 125.091 l
394.8 125.811 l
395.34 126.591 l
395.7 127.491 l
396.0 128.391 l
396.12 129.351 l
395.94 130.071 l
395.58 130.971 l
395.1 131.931 l
394.56 133.011 l
393.54 134.091 l
392.58 135.171 l
391.62 136.071 l
390.48 137.151 l
389.7 137.811 l
388.8 138.411 l
387.72 139.251 l
387.18 139.671 l
386.34 139.971 l
385.86 139.431 l
385.86 138.831 l
386.4 137.991 l
387.0 136.791 l
387.6 136.071 l
388.2 134.991 l
388.8 133.251 l
h
389.34 142.431 m
394.26 144.471 l
397.68 145.851 l
399.9 146.511 l
402.06 147.291 l
403.86 147.771 l
405.06 148.011 l
406.08 148.071 l
406.98 148.011 l
407.64 147.951 l
408.48 147.591 l
409.02 146.991 l
409.62 146.511 l
409.98 145.851 l
410.1 145.071 l
410.1 144.291 l
410.04 143.451 l
409.8 142.431 l
409.14 140.871 l
407.94 138.351 l
406.44 135.891 l
402.84 128.931 l
398.1 121.011 l
395.46 116.631 l
392.7 113.091 l
389.82 109.251 l
389.1 108.291 l
388.62 107.931 l
387.78 107.451 l
386.88 107.211 l
386.34 107.331 l
385.74 107.571 l
385.32 107.751 l
385.02 108.051 l
384.24 109.611 l
383.34 111.831 l
382.92 113.571 l
382.62 115.251 l
382.26 117.651 l
381.66 122.331 l
381.54 124.071 l
381.6 125.451 l
381.66 126.471 l
381.84 126.651 l
382.14 126.651 l
382.38 126.351 l
382.56 125.871 l
382.86 125.091 l
383.04 124.311 l
383.28 123.231 l
383.58 122.811 l
383.88 121.791 l
384.6 119.811 l
385.14 117.471 l
385.62 115.911 l
386.04 114.891 l
386.58 113.871 l
387.0 113.751 l
387.48 113.751 l
387.9 114.051 l
388.32 114.531 l
389.46 115.971 l
392.88 121.251 l
396.48 127.131 l
399.9 134.751 l
401.76 139.071 l
403.02 141.891 l
403.68 143.391 l
403.8 143.871 l
403.74 144.291 l
403.5 144.711 l
403.14 144.891 l
402.72 144.891 l
402.12 144.711 l
400.92 144.351 l
397.5 142.851 l
393.6 141.291 l
389.82 139.971 l
384.78 138.171 l
381.6 137.151 l
380.22 137.211 l
380.04 137.991 l
381.0 138.891 l
383.04 139.851 l
384.78 140.571 l
389.34 142.431 l
h
370.68 104.871 m
371.82 105.531 l
374.58 106.971 l
377.64 108.351 l
380.94 109.791 l
384.84 111.531 l
394.86 115.371 l
397.44 116.631 l
399.96 117.471 l
402.24 118.131 l
403.38 118.371 l
404.22 118.611 l
405.3 119.091 l
406.5 119.451 l
407.76 119.691 l
409.02 119.691 l
410.46 119.751 l
412.14 119.691 l
412.92 119.691 l
413.58 119.631 l
414.18 119.271 l
414.66 118.611 l
414.84 117.951 l
414.9 116.871 l
414.72 116.451 l
414.0 115.431 l
413.34 114.471 l
412.14 113.091 l
411.18 111.771 l
409.8 110.271 l
408.48 109.071 l
407.16 108.291 l
405.0 107.091 l
403.32 106.251 l
400.92 105.231 l
398.58 104.511 l
396.54 103.851 l
395.34 103.791 l
393.9 103.671 l
391.56 103.611 l
388.26 103.551 l
385.62 103.611 l
383.94 103.611 l
383.52 103.791 l
383.4 104.151 l
383.52 104.451 l
383.76 104.691 l
384.3 104.811 l
385.5 104.931 l
387.84 105.231 l
389.88 105.591 l
391.56 106.011 l
393.6 106.731 l
396.3 107.991 l
397.68 109.011 l
399.78 110.391 l
401.64 111.651 l
402.84 112.911 l
403.5 113.871 l
403.68 114.471 l
403.38 114.831 l
403.02 114.831 l
402.6 114.651 l
402.06 114.471 l
400.98 114.051 l
399.42 113.211 l
396.72 112.251 l
393.9 111.051 l
391.2 110.091 l
384.24 107.991 l
381.3 107.031 l
378.78 105.951 l
376.62 104.931 l
373.98 103.611 l
371.7 102.651 l
369.66 101.991 l
368.52 101.631 l
367.5 101.451 l
366.84 101.451 l
366.48 101.451 l
366.3 101.511 l
366.3 101.751 l
366.3 102.051 l
366.54 102.291 l
367.32 102.831 l
368.58 103.611 l
369.78 104.391 l
370.74 104.871 l
f
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
